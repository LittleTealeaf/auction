// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./database.db"
}

model Customer {
  id           Int      @id @unique @default(autoincrement())
  firstName    String?
  lastName     String?
  address      String?
  city         String?
  state        String?
  zip          String?
  phone        String?
  licenseState String?
  email        String?
  notes        String?
  Bidder       Bidder[]
  Winner       Winner[]
}

model Bidder {
  id                Int       @id @unique @default(autoincrement())
  customerId        Int?
  customer          Customer? @relation(fields: [customerId], references: [id])
  auctionYear       Int?
  luPaymentMethod   Int?
  paymentDetails    String?
  paymentAdjustment Decimal?
  totalPaid         Decimal?
  numberOfGuests    Int?
}

model Winner {
  id           Int           @id @default(autoincrement())
  AuctionItems AuctionItem[]
  Customer     Customer?     @relation(fields: [customerId], references: [id])
  customerId   Int?
}

model AuctionItem {
  id               Int      @id @unique @default(autoincrement())
  number           Int?
  description      String?
  isSilent         Boolean?
  winningBidder    Int?
  winningBidAmount Decimal?
  auctionYear      Int?
  Winner           Winner?  @relation(fields: [winnerId], references: [id])
  winnerId         Int?
}

model User {
  id       Int      @id @unique @default(autoincrement())
  username String   @unique
  password String?
  roleId   Int
  Role     Role     @relation(fields: [roleId], references: [id])
  keys     ApiKey[]
}

model Role {
  id               Int     @id @default(autoincrement())
  name             String?
  customerRead     Boolean @default(true)
  customerWrite    Boolean @default(false)
  userAdmin        Boolean @default(false)
  auctionItemRead  Boolean @default(true)
  auctionItemWrite Boolean @default(false)
  winnerRead       Boolean @default(true)
  winnerWrite      Boolean @default(false)
  bidderRead       Boolean @default(true)
  bidderWrite      Boolean @default(false)
  User             User[]
}

model ApiKey {
  id      Int      @id @unique @default(autoincrement())
  key     String   @unique @default(cuid())
  User    User     @relation(fields: [userId], references: [id])
  userId  Int
  lastUse DateTime @default(now())
  expired Boolean  @default(false)
}
